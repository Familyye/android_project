name: Magisk Build

on:
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-22.04 ]
    env:
      NDK_CCACHE: ccache
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      RUSTC_WRAPPER: sccache

    steps:

      - name: Check out
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}

      - name: Set up sccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          variant: sccache
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-build-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-cache-
      - name: Clone project
        run: |
          rm -rf ${{ github.workspace }}/*
          git clone --depth=1 https://github.com/topjohnwu/Magisk project
          cp -a project/. ${{ github.workspace }}
          sed -i 's/gradle-.*/gradle-8.0-rc-1-bin.zip/g' gradle/wrapper/gradle-wrapper.properties
       
      - name: Clone external project
        run: |  
          
          rm -rf native/src/external/selinux
          git clone https://github.com/topjohnwu/selinux.git native/src/external/selinux
          
          rm -rf native/src/external/busybox
          git clone https://github.com/topjohnwu/ndk-busybox.git native/src/external/busybox
          
          rm -rf native/src/external/dtc
          git clone https://github.com/dgibson/dtc.git native/src/external/dtc
          
          rm -rf native/src/external/lz4
          git clone https://github.com/lz4/lz4.git native/src/external/lz4
          
          rm -rf native/src/external/bzip2
          git clone https://github.com/nemequ/bzip2.git native/src/external/bzip2
          
          rm -rf native/src/external/xz
          git clone https://github.com/xz-mirror/xz.git native/src/external/xz
          
          rm -rf native/src/external/nanopb
          git clone https://github.com/nanopb/nanopb.git native/src/external/nanopb
          
          rm -rf native/src/external/mincrypt
          git clone https://github.com/topjohnwu/mincrypt.git native/src/external/mincrypt
          
          rm -rf native/src/external/pcre
          git clone https://android.googlesource.com/platform/external/pcre native/src/external/pcre
          
          rm -rf native/src/external/libcxx
          git clone https://github.com/topjohnwu/libcxx.git native/src/external/libcxx
          
          rm -rf native/src/external/zlib
          git clone https://android.googlesource.com/platform/external/zlib native/src/external/zlib
          
          rm -rf native/src/external/parallel-hashmap
          git clone https://github.com/greg7mdp/parallel-hashmap.git native/src/external/parallel-hashmap
          
          rm -rf native/src/external/zopfli
          git clone https://github.com/google/zopfli.git native/src/external/zopfli
          
          rm -rf native/src/external/cxx-rs
          git clone https://github.com/topjohnwu/cxx.git native/src/external/cxx-rs
          
          rm -rf native/src/external/lsplt
          git clone https://github.com/LSPosed/LSPlt.git native/src/external/lsplt
          
          rm -rf tools/termux-elf-cleaner
          git clone https://github.com/termux/termux-elf-cleaner.git tools/termux-elf-cleaner

      - name: Set up NDK
        run: python build.py -v ndk

      - name: Build release
        run: |
          python build.py -vr app

      # Only upload artifacts built on Linux
      - name: Upload build artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: out
